리스트의 활용 중

1.정렬

2.two pointer

#정렬

리스트를 정렬 할 때의 복잡도는 "O(nlogn)" 이건 외우기

버블정렬 퀵정렬 구현 필요 X

파이썬에서는 이미 구현되어 있어 사용하기만 하면 된다.

#two pointer

두개의 포인터를 가지고 이리저리 가면서 풀 수 있는 방법

직관적 풀이 -> 2중 for문(완전탐색)

문제점 시간복잡도 n^2 이므로 시간 초과가 될 수 있음

조금더 효율적인 방법으로 풀어야함

nlogn 이하의 복잡도로 구현

# 자료구조와 알고리즘 활용

정렬되지 않은 리스트 인풋

정렬 nlogn 이므로 해볼 수 있다 판단.

정렬 후 더한 값이 target 보다 작으면 오른쪽으로 옮김

작으면 왼쪽으로 옮김

1 3 4 5 7 9 16

단순화 하여 생각

1 3 16 인풋 

1 + 16 = 17이므로 왼쪽으로 옮겨

3 + 16 19 더 크게됨

같은 숫자를 가리킬 때 까지 반복

코드 설계후 구현 해야 함
